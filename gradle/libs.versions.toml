[versions]
agp = "8.1.4"
kotlin = "2.1.10"
foojay = "0.5.0"
ktor = "3.1.0"
coroutines = "1.7.3"
datetime = "0.6.1"
serialization = "1.8.0"
sqldelight = "2.0.2"
collections-immutable = "0.3.8"
io-core = "0.7.0"
mockk = "1.13.7"
truth = "1.1.5"
maven-publish = "0.29.0"
coroutines-io = "0.1.8"
okio = "3.10.2"

[libraries]
# Test
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
mockk-common = { module = "io.mockk:mockk-common", version.ref = "mockk" }
mockk-jvm = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }

# Ktor Client
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-winhttp = { module = "io.ktor:ktor-client-winhttp-mingwx64", version.ref = "ktor" }
ktor-client-apache5 = { module = "io.ktor:ktor-client-apache5", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js-js", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-wasm = { module = "io.ktor:ktor-client-core-wasm-js", version.ref = "ktor" }
okio-client = { module = "com.squareup.okio:okio", version.ref = "okio" }

# Kotlinx
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-io = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-io", version.ref = "coroutines-io" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime"}
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "collections-immutable"}
kotlinx-io-core = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version.ref = "io-core"}
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization"}
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization"}

# SQLDelight
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight"}
sqldelight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight"}
sqldelight-coroutines-primitive-adapters = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight"}
sqldelight-driver-jvm = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight"}
sqldelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight"}
sqldelight-driver-js-browser = { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqldelight"}
sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight"}

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
sqldelight = {id = "app.cash.sqldelight", version.ref = "sqldelight"}
foojayResolverConvention = {id = "org.gradle.toolchains.foojay-resolver-convention", version.ref = "foojay"}
vanniktech-mavenPublish = { id = "com.vanniktech.maven.publish", version.ref = "maven-publish" }